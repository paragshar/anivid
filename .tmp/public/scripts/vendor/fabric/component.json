{
  "name": "fabric",
  "repo": "kangax/fabric.js",
  "description": "Object model for HTML5 canvas, and SVG-to-canvas parser. Backed by jsdom and node-canvas.",
  "version": "1.4.0",
  "keywords": [
    "canvas",
    "graphic",
    "graphics",
    "SVG",
    "node-canvas",
    "parser",
    "HTML5",
    "object model"
  ],
  "dependencies": {},
  "development": {},
  "license": "MIT",
  "scripts": [
    "./dist/all.js"
  ],
  "readme": "<a href=\"http://fabricjs.challengepost.com/?utm_source=partner&utm_medium=banner&utm_campaign=fabricjs\" style=\"display: block\">\n  <img src=\"https://dl.dropboxusercontent.com/u/822184/fabric-js-promo-widget-github.gif\" style=\"width: auto\">\n</a>\n\n### Fabric\n[![Build Status](https://secure.travis-ci.org/kangax/fabric.js.png?branch=master)](http://travis-ci.org/#!/kangax/fabric.js)\n\n[![Code Climate](https://codeclimate.com/repos/526a0ed089af7e6cf2001389/badges/d1c922dd1511ffa8a72f/gpa.png)](https://codeclimate.com/repos/526a0ed089af7e6cf2001389/feed)\n\n<a href=\"https://npmjs.org/package/fabric\"><img src=\"https://badge.fury.io/js/fabric.png\"></a>\n\n**Fabric.js** is a framework that makes it easy to work with HTML5 canvas element. It is an **interactive object model** on top of canvas element. It is also an **SVG-to-canvas parser**.\n\n<a href=\"http://fabricjs.com/kitchensink/\" target=\"_blank\"><img src=\"https://github.com/kangax/fabric.js/raw/master/lib/screenshot.png\" style=\"width:300px;box-shadow:rgba(0,0,0,0.3) 0 0 5px\"></a>\n\nUsing Fabric.js, you can create and populate objects on canvas; objects like simple geometrical shapes — rectangles, circles, ellipses, polygons, or more complex shapes consisting of hundreds or thousands of simple paths. You can then scale, move, and rotate these objects with the mouse; modify their properties — color, transparency, z-index, etc. You can also manipulate these objects altogether — grouping them with a simple mouse selection.\n\n[Contributions](https://github.com/kangax/fabric.js/wiki/Love-Fabric%3F-Help-us-by...) are very much welcome!\n\n### Goals\n\n- Unit tested (2300+ tests at the moment)\n- Modular (~60 small [\"classes\", modules, mixins](http://fabricjs.com/docs/))\n- Cross-browser\n- [Fast](https://github.com/kangax/fabric.js/wiki/Focus-on-speed)\n- Encapsulated in one object\n- No browser sniffing for critical functionality\n- Runs under ES5 strict mode\n- Runs on a server under [Node.js](http://nodejs.org/) (0.6, 0.8, 0.10) (see [Node.js limitations](https://github.com/kangax/fabric.js/wiki/Fabric-limitations-in-node.js))\n\n### Supported browsers\n\n- Firefox 2+\n- Safari 3+\n- Opera 9.64+\n- Chrome (all versions should work)\n- IE9, IE10, IE11\n\n#### With help of [Explorer Canvas](http://code.google.com/p/explorercanvas/)\n\n- IE8 (incomplete — about 17 failing tests at the moment)\n- IE7,6 (incomplete - about 27 failing tests at the moment)\n\nSee [Fabric limitations in Old IE](https://github.com/kangax/fabric.js/wiki/Fabric-limitations-in-oldIE).\n\nYou can [run automated unit tests](http://fabricjs.com/test/unit/) right in the browser.\n\n### History\n\nFabric.js started as a foundation for design editor on [printio.ru](http://printio.ru) — interactive online store with ability to create your own designs. The idea was to create [Javascript-based editor](http://printio.ru/ringer_man_tees/new), which would make it easy to manipulate vector shapes and images on T-Shirts. Since performance was one of the most critical requirements, we chose canvas over SVG. While SVG is excellent with static shapes, it's not as performant as canvas when it comes to dynamic manipulation of objects (movement, scaling, rotation, etc.). Fabric.js was heavily inspired by [Ernest Delgado's canvas experiment](http://www.ernestdelgado.com/public-tests/canvasphoto/demo/canvas.html). In fact, code from Ernest's experiment was the foundation of an entire framework. Later, Fabric.js grew into a collection of distinct object types and got an SVG-to-canvas parser.\n\n<h3 id=\"bower-install\">Install with bower</h3>\n\n    $ bower install fabric\n\n\n<h3 id=\"fabric-building\">Building</h3>\n\n1. [Install Node.js](https://github.com/joyent/node/wiki/Installation)\n\n2. Build distribution file  **[~77K minified, ~20K gzipped]**\n\n        $ node build.js\n\n    2.1 Or build a custom distribution file, by passing (comma separated) module names to be included.\n\n          $ node build.js modules=text,serialization,parser\n          // or\n          $ node build.js modules=text\n          // or\n          $ node build.js modules=parser,text\n          // etc.\n\n      By default (when none of the modules are specified) only basic functionality is included.\n      See the list of modules below for more information on each one of them.\n      Note that default distribution has support for **static canvases** only.\n\n      To get minimal distribution with interactivity, make sure to include corresponding module:\n\n          $ node build.js modules=interaction\n\n    2.2 You can also include all modules like so:\n\n          $ node build.js modules=ALL\n\n    2.3 You can exclude a few modules like so:\n\n          $ node build.js modules=ALL exclude=gestures,image_filters\n\n3. Create a minified distribution file\n\n        # Using YUICompressor (default option)\n        $ node build.js modules=... minifier=yui\n\n        # or Google Closure Compiler\n        $ node build.js modules=... minifier=closure\n\n4. Enable AMD support via require.js (requires uglify)\n\n        $ node build.js requirejs modules=...\n\n5. Create source map file for better productive debugging (requires uglify or google closure compiler).<br>More information about [source maps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/).\n\n        $ node build.js sourcemap modules=...\n\n    If you use google closure compiler you have to add `sourceMappingURL` manually at the end of the minified file all.min.js (see issue https://code.google.com/p/closure-compiler/issues/detail?id=941).\n\n        //# sourceMappingURL=all.min.js.map\n\n### Demos\n\n- [Demos](http://fabricjs.com/demos/)\n- [Kitchensink demo](http://fabricjs.com/kitchensink/)\n- [Benchmarks](http://fabricjs.com/benchmarks/)\n\n### Documentation\n\nDocumentation is always available at [http://fabricjs.com/docs/](http://fabricjs.com/docs/).\n\nAlso see [official 4-part intro series](http://fabricjs.com/articles), [presentation from BK.js](http://www.slideshare.net/kangax/fabricjs-building-acanvaslibrarybk) and [presentation from Falsy Values](http://www.slideshare.net/kangax/fabric-falsy-values-8067834) for an overview of fabric.js, how it works, and its features.\n\n### Optional modules\n\nThese are the optional modules that could be specified for inclusion, when building custom version of fabric:\n\n- **text** — Adds support for static text (`fabric.Text`)\n- **itext** — Adds support for interactive text (`fabric.IText`)\n- **serialization** — Adds support for `loadFromJSON`, `loadFromDatalessJSON`, and `clone` methods on `fabric.Canvas`\n- **interaction** — Adds support for interactive features of fabric — selecting/transforming objects/groups via mouse/touch devices.\n- **parser** — Adds support for `fabric.parseSVGDocument`, `fabric.loadSVGFromURL`, and `fabric.loadSVGFromString`\n- **image_filters** — Adds support for image filters, such as grayscale of white removal.\n- **easing** — Adds support for animation easing functions\n- **node** — Adds support for running fabric under node.js, with help of [jsdom](https://github.com/tmpvar/jsdom) and [node-canvas](https://github.com/learnboost/node-canvas) libraries.\n- **freedrawing** — Adds support for free drawing\n- **gestures** — Adds support for multitouch gestures with help of [Event.js](https://github.com/mudcube/Event.js)\n- **object_straightening** — Adds support for rotating an object to one of 0, 90, 180, 270, etc. depending on which is angle is closer.\n- **animation** — Adds support for animation (`fabric.util.animate`, `fabric.util.requestAnimFrame`, `fabric.Object#animate`, `fabric.Canvas#fxCenterObjectH/#fxCenterObjectV/#fxRemove`)\n\nAdditional flags for build script are:\n\n- **requirejs** — Makes fabric requirejs AMD-compatible in `dist/all.js`. *Note:* an unminified, requirejs-compatible version is always created in `dist/all.require.js`\n- **no-strict** — Strips \"use strict\" directives from source\n- **no-svg-export** — Removes svg exporting functionality\n- **no-es5-compat** - Removes ES5 compat methods (Array.prototype.*, String.prototype.*, Function.prototype.*)\n- **sourcemap** - Generates a sourceMap file and adds the `sourceMappingURL` (only if uglifyjs is used) to `dist/all.min.js`\n\nFor example:\n\n    node build.js modules=ALL exclude=json no-strict no-svg-export\n\n### Examples of use\n\n#### Adding red rectangle to canvas\n\n    <canvas id=\"canvas\" width=\"300\" height=\"300\"></canvas>\n    ...\n    var canvas = new fabric.Canvas('canvas');\n\n    var rect = new fabric.Rect({\n      top: 100,\n      left: 100,\n      width: 60,\n      height: 70,\n      fill: 'red'\n    });\n\n    canvas.add(rect);\n\n### Staying in touch\n\nFollow [@fabric.js](http://twitter.com/fabricjs) or [@kangax](http://twitter.com/kangax) on twitter.\n\nQuestions, suggestions — [fabric.js on Google Groups](http://groups.google.com/group/fabricjs).\n\nSee [Fabric questions on Stackoverflow](stackoverflow.com/questions/tagged/fabricjs),\nFabric snippets on [jsfiddle](http://jsfiddle.net/user/fabricjs/fiddles/)\nor [codepen.io](http://codepen.io/tag/fabricjs).\n\nGet help in Fabric's IRC channel — irc://irc.freenode.net/#fabric.js\n\n### Credits\n\n- Ernest Delgado for the original idea of [manipulating images on canvas](http://www.ernestdelgado.com/archive/canvas/).\n- [Maxim \"hakunin\" Chernyak](http://twitter.com/hakunin) for ideas, and help with various parts of the library throughout its life.\n- [Sergey Nisnevich](http://nisnya.com) for help with geometry logic.\n- [Stefan Kienzle](https://twitter.com/kienzle_s) for help with bugs, features, documentation, github issues\n- Github contributors: @Kingsquare, @cleercode, @jarek-itmore, @sunrei, @khronnuz, @ollym, @garg, @sjpemberton09, @willmcneilly, @davidjrice, @coulix, and [more](https://github.com/kangax/fabric.js/graphs/contributors)\n\n### MIT License\n\nCopyright (c) 2008-2013 Printio (Juriy Zaytsev, Maxim Chernyak)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "gitHead": "6026dc62ba789792781cc17933f6436141bef563",
  "_id": "fabric.js@1.4.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/kangax/fabric.js.git"
  }
}