<!doctype html>
<html lang="en">
<head>
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
</head>
<body>
Create your vedio

<div id='placehere'>
	Left pannel

<form action= '/saveFile' method="post" enctype="multipart/form-data">
  <input type="text" name="name">
  <input type="file" name="testFile">
  <input type="submit" value="Submit">
</form>

	<img id='imgs' onclick='clickedit()' src = 'assets/characters/boy/standing.svg' height='150' width ='100' />
  <img id='bg' onclick = 'clickedBG()' src = 'assets/backgrounds/bg-class-room.svg' height = '150' width = '100' />
  <!-- Recorder starts here -->
  <button onclick="startRecording(this);">record</button>
  <button onclick="stopRecording(this);" disabled>stop</button>
  <h2>Log</h2>
  <pre id="log"></pre>

  <script>
  function __log(e, data) {
    log.innerHTML += "\n" + e + " " + (data || '');
  }

  var audio_context;
  var recorder;

  function startUserMedia(stream) {
    var input = audio_context.createMediaStreamSource(stream);
    __log('Media stream created.');
    

    var filter = audio_context.createBiquadFilter();
    input.connect(filter);
   // input.connect(audio_context.destination);    // Deepanshu: destination is speaker. audio_context is mostly used for playing sound
    __log('Input connected to audio context destination.');
    
    recorder = new Recorder(input);
    __log('Recorder initialised.');
  }

  function startRecording(button) {
    recorder && recorder.record();
    button.disabled = true;
    button.nextElementSibling.disabled = false;
    __log('Recording...');
  }

  function stopRecording(button) {
    recorder && recorder.stop();
    button.disabled = true;
    button.previousElementSibling.disabled = false;
    __log('Stopped recording.');
    
    // create WAV download link using audio data blob
    createDownloadLink();
    
    recorder.clear();
  }

  function createDownloadLink() {
    recorder && recorder.exportWAV(function(blob) {
      console.log('blob: '+blob);
      var url = URL.createObjectURL(blob);
      var reader = new FileReader();

      reader.onload = function(e) {
        var dataURL = reader.result;
        console.log('dataURL of blob: '+dataURL);
        console.log('blob length: '+ dataURL.length);

         //var splits = dataURL.toString().split(',');
         //console.log('splits[0]:'+ splits[0]);
         //console.log('splits[1]:'+ splits[1]);
         //console.log(new Buffer("SGVsbG8gV29ybGQ=", 'base64').toString('ascii'))

        $.ajax({
          url: '/convertAudio',
          type: 'POST',
          data: JSON.stringify({ data : dataURL}),
          //data: dataURL,
          // data: {
          //   data: dataURL
          // },
          dataType: 'json',
          cache: false,
          processData: false, // Don't process the files
          contentType: false, // Set content type to false as jQuery will tell the server its a query string request
          success: function(data, textStatus, jqXHR)
          {
            if(typeof data.error === 'undefined')
            {
              // Success so call function to process the form
              //submitForm(event, data);
            }
            else
            {
              // Handle errors here
              console.log('ERRORS: ' + data.error);
            }
          },
          error: function(jqXHR, textStatus, errorThrown)
          {
            // Handle errors here
            console.log('ERRORS: ' + textStatus);
            // STOP LOADING SPINNER
          }
        });
      }

      //reader.readAsBinaryString(blob);
      reader.readAsDataURL(blob);
      //reader.readAsText(blob);
      console.log('url of blob: '+url);
    });
  }

  // function SaveToDisk(blobURL, fileName) {
  //   console.log('saving to disk blobURL: '+blobURL+' fileName: '+fileName);
  //   var reader = new FileReader();
  //   reader.readAsDataURL(blobURL);
  //   reader.onload = function (event) {
  //       var save = document.createElement('a');
  //       save.href = event.target.result;
  //       console.log('save.href: '+save.href);
  //       save.target = '_blank';
  //       save.download = fileName || 'unknown file';

  //       var event = document.createEvent('Event');
  //       event.initEvent('click', true, true);
  //       save.dispatchEvent(event);
  //       (window.URL || window.webkitURL).revokeObjectURL(save.href);
  //   };
  // }

  window.onload = function init() {
    try {
      // webkit shim
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
      window.URL = window.URL || window.webkitURL;
      
      audio_context = new AudioContext;
      __log('Audio context set up.');
      __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
    } catch (e) {
      alert('No web audio support in this browser!');
    }
    
    navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
      __log('No live audio input: ' + e);
    });
  };
  </script>

  <script src="recorderJS/recorder.js"></script>
  <!-- Recorder ends here  -->
	<script> 
  function clickedBG(){
    $.post('background/findBackground', function (data, status){
      console.log('background image clicked');
      console.log('data.background.length: '+data.background.length);
        for(var k=0; k<data.background.length; k++){
            console.log('k: '+k);
            var img = document.createElement("img");
             img.src = 'assets/backgrounds/'+data.background[k].name+'.svg';
             img.width = 100;
             img.height = 150;
             img.name = k;
             img.onclick = function(){
                console.log('img.name: '+this.name);
                var iframe = window.videomaker;
                iframe.anivid.addBackgroundToActiveScene(data.background[this.name].name);
             };
             console.log('img.src: '+img.src);
             document.getElementById('placehere').appendChild(img);
        }
    }, 'json')
  };
	function clickedit() {
    //var name = $('#name').val();
    //var id = $('#pw').val();
    var name = 'Deep';
    var id = 123;
    var obj = {
        name: name,
        id: id
    };
    var nameForImage;
    var numberOfCharacters;
    //posting on node server
    $.post('character/boy', function (data, status) {
    	numberOfCharacters = data.character.length;
      console.log('numberOfCharacters: '+numberOfCharacters);
      for(var i=0 ; i<numberOfCharacters; i++){
        		console.log('i: '+i);
        		var src;
            var name;
            console.log('data.character[i].speaking: '+data.character[i].speaking);
        		
            if(data.character[i].emotion != undefined){
                if(data.character[i].speaking == 'true'){
                  src = 'assets/characters/boy/'+data.character[i].action+'-'+data.character[i].emotion+'-'+'speaking-0.svg';
                  name = data.character[i].action+'-'+data.character[i].emotion+'-'+'speaking';
                }
                else{
                  src = 'assets/characters/boy/'+data.character[i].action+'-'+data.character[i].emotion+'-0.svg';
                  name = data.character[i].action+'-'+data.character[i].emotion;
                }
            }
            else{
                if(data.character[i].speaking == 'true'){
                  src = 'assets/characters/boy/'+data.character[i].action+'-'+'speaking-0.svg';
                  name = data.character[i].action+'-'+'speaking';;
                }
                else{
                  src = 'assets/characters/boy/'+data.character[i].action+'-0.svg';
                  name = data.character[i].action;
                }
            }
  	        var img = document.createElement("img");
  	        img.src = src;
  	    	  img.width = 100;
  	    	  img.height = 150;
            img.name = name;
  	    	  img.onclick = function(){
              console.log('Character is clicked with src: '+ src);
              var iframe = window.videomaker;
              var splits = this.name.split('-');
              console.log('splits: '+splits);
              if(splits.length == 3 ){
                iframe.anivid.addCharacterToActiveScene({name:'boy', action:[splits[0]], speaking: true, nFrames:3, looking:'right'});
              }
              else if(splits.length == 2){
                if(splits[1] == 'speaking'){
                  iframe.anivid.addCharacterToActiveScene({name:'boy', action:[splits[0]], speaking: true, nFrames:3, looking:'right'});
                }
                else{
                  iframe.anivid.addCharacterToActiveScene({name:'boy', action:[splits[0]], speaking: false, nFrames:3, looking:'right'});
                }
              }
              else{
                 iframe.anivid.addCharacterToActiveScene({name:'boy', action:[splits[0]], speaking: false, nFrames:3, looking:'right'});
              }
            };
             console.log('img.src: '+img.src);
  		       document.getElementById('placehere').appendChild(img);
      }
    }, 'json')
	}
	</script>
</div>
<div>
	Right Pannel
	<iframe src='/video' name="videomaker" width='700' height='500'></iframe>
</div>
<div>Footer</div>
</body>
</html>